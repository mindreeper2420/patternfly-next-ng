{"version":3,"file":"button.component.js","sourceRoot":"","sources":["../../../build/src/app/button/button.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C;;GAEG;AAWH;IAqBE;;OAEG;IACH;QAvBA;;WAEG;QACM,aAAQ,GAAY,KAAK,CAAC;QAEnC;;WAEG;QACM,SAAI,GAAW,UAAU,CAAC,OAAO,CAAC;QAO3C;;WAEG;QACiB,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;IAMlD,CAAC;IAED,iBAAiB;IAEjB;;OAEG;IACH,kCAAQ,GAAR;IACA,CAAC;IAED,UAAU;IAEV,sCAAY,GAAZ,UAAa,MAAkB;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAnCQ;QAAR,KAAK,EAAE;;qDAA2B;IAK1B;QAAR,KAAK,EAAE;;iDAAmC;IAKlC;QAAR,KAAK,EAAE;;oDAAiB;IAKL;QAAnB,MAAM,CAAC,UAAU,CAAC;;qDAA+B;IAnBvC,eAAe;QAV3B,SAAS,CAAC;YACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,+WAKiE;SAC5E,CAAC;;OACW,eAAe,CAwC3B;IAAD,sBAAC;CAAA,AAxCD,IAwCC;SAxCY,eAAe","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { ButtonType } from './button-type';\n\n/**\n * Button component.\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-button',\n  template: `<button class=\"pf-c-button\" title=\"{{tooltip}}\" [disabled]=\"disabled\" [ngClass]=\"{\n          'pf-is-danger': type === 'danger',\n          'pf-is-primary': type === 'primary',\n          'pf-is-secondary': type === 'secondary',\n          'pf-is-tertiary': type === 'tertiary'\n        }\" (click)=\"handleAction($event)\"><ng-content></ng-content></button>`\n})\nexport class ButtonComponent implements OnInit {\n  /**\n   * The disabled state\n   */\n  @Input() disabled: boolean = false;\n\n  /**\n   * The button type; see ButtonType\n   */\n  @Input() type: string = ButtonType.DEFAULT;\n\n  /**\n   * The button tool tip\n   */\n  @Input() tooltip: string;\n\n  /**\n   * The event emitted when a button has been selected\n   */\n  @Output('onSelect') onSelect = new EventEmitter();\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n  }\n\n  // Actions\n\n  handleAction($event: MouseEvent): void {\n    this.onSelect.emit(this);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}